version: '3.7'

x-base-backend: &base_backend
  build: ../../backend
  environment:
    # TODO Think of it, if it's needed in prod or sidekiq
    VITE_RUBY_HOST: ${VITE_HOST:-frontend}
    POSTGRES_USER: ${HUB_DB_USER}
    POSTGRES_PASSWORD: ${HUB_DB_PASS}
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  backend:
    <<: *base_backend
    command: bundle exec rails s -p 3050 -b '0.0.0.0'
    ports:
      - "3050:3050"

  # Yes, it's empty container, that starts and stop immediately
  # it's override in dev/frontend.yml
  frontend:
    <<: *base_backend

  sidekiq:
    <<: *base_backend
    command: bundle exec sidekiq

  postgres:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_USER: ${HUB_DB_USER}
      POSTGRES_PASSWORD: ${HUB_DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${HUB_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6.2.11-alpine
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
